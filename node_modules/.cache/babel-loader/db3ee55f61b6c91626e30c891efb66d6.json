{"ast":null,"code":"import _defineProperty from\"/Users/donitabella/Desktop/UC BERKELEY/Challenges/React Portfolio/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/donitabella/Desktop/UC BERKELEY/Challenges/React Portfolio/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/donitabella/Desktop/UC BERKELEY/Challenges/React Portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Button,Form,Input,Container}from\"semantic-ui-react\";import validator from\"validator\";import isEmail from\"validator/lib/isEmail\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var validateRequired=function validateRequired(name,value){if(!value||!value.toString().trim().length){return{content:\"Please enter a \".concat(name)};}};var validateEmail=function validateEmail(value){var valido=validator.isEmail(value);if(!valido){return{content:\"Please enter a valid email\"};}};var validateLength=function validateLength(value){if(value.toString().trim().length<12){return{content:\"Please enter a message of at least 12 characters\"};}};var ContactForm=function ContactForm(){var _state$name3,_state$email3,_state$message3;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var handleChange=function handleChange(e,_ref){var name=_ref.name,value=_ref.value;var error;if(name===\"email\"){error=validateEmail(value);setState(_objectSpread(_objectSpread({},state),{},_defineProperty({},name,{value:value,error:error})));if(error){return;}}if(name===\"message\"){error=validateLength(value);setState(_objectSpread(_objectSpread({},state),{},_defineProperty({},name,{value:value,error:error})));if(error){return;}}error=validateRequired(name,value);setState(_objectSpread(_objectSpread({},state),{},_defineProperty({},name,{value:value,error:error})));};var handleSubmit=function handleSubmit(e){var _state$email,_state$name,_state$message;var emailError=validateRequired(\"email\",(_state$email=state.email)===null||_state$email===void 0?void 0:_state$email.value);var nameError=validateRequired(\"name\",(_state$name=state.name)===null||_state$name===void 0?void 0:_state$name.value);var messageError=validateRequired(\"message\",(_state$message=state.message)===null||_state$message===void 0?void 0:_state$message.value);var newState=state;if(emailError){var _state$email2;newState=_objectSpread(_objectSpread({},state),{},{email:{value:(_state$email2=state.email)===null||_state$email2===void 0?void 0:_state$email2.value,error:emailError}});}if(nameError){var _state$name2;newState=_objectSpread(_objectSpread({},newState),{},{name:{value:(_state$name2=state.name)===null||_state$name2===void 0?void 0:_state$name2.value,error:nameError}});}if(messageError){var _state$message2;newState=_objectSpread(_objectSpread({},newState),{},{message:{value:(_state$message2=state.message)===null||_state$message2===void 0?void 0:_state$message2.value,error:messageError}});}setState(newState);};return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(Form.Field,{name:\"name\",onChange:handleChange,id:\"form-input-control-error-name\",label:\"Name\",placeholder:\"Joe Schmoe\",control:Input,error:(_state$name3=state.name)===null||_state$name3===void 0?void 0:_state$name3.error}),/*#__PURE__*/_jsx(Form.Field,{name:\"email\",onChange:handleChange,id:\"form-input-control-error-email\",control:Input,label:\"Email\",placeholder:\"joe@schmoe.com\",error:(_state$email3=state.email)===null||_state$email3===void 0?void 0:_state$email3.error}),/*#__PURE__*/_jsx(Form.Field,{name:\"message\",onChange:handleChange,id:\"form-input-control-error-message\",label:\"Message\",control:Input,error:(_state$message3=state.message)===null||_state$message3===void 0?void 0:_state$message3.error}),/*#__PURE__*/_jsx(Button,{type:\"submit\",children:\"Submit\"})]})});};export default ContactForm;","map":{"version":3,"sources":["/Users/donitabella/Desktop/UC BERKELEY/Challenges/React Portfolio/src/components/ContactForm.js"],"names":["React","useState","Button","Form","Input","Container","validator","isEmail","validateRequired","name","value","toString","trim","length","content","validateEmail","valido","validateLength","ContactForm","state","setState","handleChange","e","error","handleSubmit","emailError","email","nameError","messageError","message","newState"],"mappings":"6bAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,KAAvB,CAA8BC,SAA9B,KAA+C,mBAA/C,CACA,MAAOC,CAAAA,SAAP,KAAsB,WAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,C,wFAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,IAAD,CAAOC,KAAP,CAAiB,CACxC,GAAI,CAACA,KAAD,EAAU,CAACA,KAAK,CAACC,QAAN,GAAiBC,IAAjB,GAAwBC,MAAvC,CAA+C,CAC7C,MAAO,CACLC,OAAO,0BAAoBL,IAApB,CADF,CAAP,CAGD,CACF,CAND,CAQA,GAAMM,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACL,KAAD,CAAW,CAC/B,GAAMM,CAAAA,MAAM,CAAGV,SAAS,CAACC,OAAV,CAAkBG,KAAlB,CAAf,CACA,GAAI,CAACM,MAAL,CAAa,CACX,MAAO,CACLF,OAAO,6BADF,CAAP,CAGD,CACF,CAPD,CASA,GAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACP,KAAD,CAAW,CAChC,GAAIA,KAAK,CAACC,QAAN,GAAiBC,IAAjB,GAAwBC,MAAxB,CAAiC,EAArC,CAAyC,CACvC,MAAO,CACLC,OAAO,CAAE,kDADJ,CAAP,CAGD,CACF,CAND,CAQA,GAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,gDACxB,cAA0BjB,QAAQ,CAAC,EAAD,CAAlC,wCAAOkB,KAAP,eAAcC,QAAd,eACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,MAAwB,IAAlBb,CAAAA,IAAkB,MAAlBA,IAAkB,CAAZC,KAAY,MAAZA,KAAY,CAC3C,GAAIa,CAAAA,KAAJ,CACA,GAAId,IAAI,GAAK,OAAb,CAAsB,CACpBc,KAAK,CAAGR,aAAa,CAACL,KAAD,CAArB,CACAU,QAAQ,gCAAMD,KAAN,wBAAcV,IAAd,CAAqB,CAAEC,KAAK,CAALA,KAAF,CAASa,KAAK,CAALA,KAAT,CAArB,GAAR,CACA,GAAIA,KAAJ,CAAW,CACT,OACD,CACF,CACD,GAAId,IAAI,GAAK,SAAb,CAAwB,CACtBc,KAAK,CAAGN,cAAc,CAACP,KAAD,CAAtB,CACAU,QAAQ,gCAAMD,KAAN,wBAAcV,IAAd,CAAqB,CAAEC,KAAK,CAALA,KAAF,CAASa,KAAK,CAALA,KAAT,CAArB,GAAR,CACA,GAAIA,KAAJ,CAAW,CACT,OACD,CACF,CACDA,KAAK,CAAGf,gBAAgB,CAACC,IAAD,CAAOC,KAAP,CAAxB,CACAU,QAAQ,gCAAMD,KAAN,wBAAcV,IAAd,CAAqB,CAAEC,KAAK,CAALA,KAAF,CAASa,KAAK,CAALA,KAAT,CAArB,GAAR,CACD,CAlBD,CAmBA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACF,CAAD,CAAO,6CAC1B,GAAMG,CAAAA,UAAU,CAAGjB,gBAAgB,CAAC,OAAD,eAAUW,KAAK,CAACO,KAAhB,uCAAU,aAAahB,KAAvB,CAAnC,CACA,GAAMiB,CAAAA,SAAS,CAAGnB,gBAAgB,CAAC,MAAD,cAASW,KAAK,CAACV,IAAf,sCAAS,YAAYC,KAArB,CAAlC,CACA,GAAMkB,CAAAA,YAAY,CAAGpB,gBAAgB,CAAC,SAAD,iBAAYW,KAAK,CAACU,OAAlB,yCAAY,eAAenB,KAA3B,CAArC,CACA,GAAIoB,CAAAA,QAAQ,CAAGX,KAAf,CAEA,GAAIM,UAAJ,CAAgB,mBACdK,QAAQ,gCACHX,KADG,MAENO,KAAK,CAAE,CAAEhB,KAAK,gBAAES,KAAK,CAACO,KAAR,wCAAE,cAAahB,KAAtB,CAA6Ba,KAAK,CAAEE,UAApC,CAFD,EAAR,CAID,CAED,GAAIE,SAAJ,CAAe,kBACbG,QAAQ,gCACHA,QADG,MAENrB,IAAI,CAAE,CAAEC,KAAK,eAAES,KAAK,CAACV,IAAR,uCAAE,aAAYC,KAArB,CAA4Ba,KAAK,CAAEI,SAAnC,CAFA,EAAR,CAID,CAED,GAAIC,YAAJ,CAAkB,qBAChBE,QAAQ,gCACHA,QADG,MAEND,OAAO,CAAE,CAAEnB,KAAK,kBAAES,KAAK,CAACU,OAAR,0CAAE,gBAAenB,KAAxB,CAA+Ba,KAAK,CAAEK,YAAtC,CAFH,EAAR,CAID,CAEDR,QAAQ,CAACU,QAAD,CAAR,CACD,CA5BD,CA8BA,mBACE,KAAC,SAAD,wBACE,MAAC,IAAD,EAAM,QAAQ,CAAEN,YAAhB,wBACE,KAAC,IAAD,CAAM,KAAN,EACE,IAAI,CAAC,MADP,CAEE,QAAQ,CAAEH,YAFZ,CAGE,EAAE,CAAC,+BAHL,CAIE,KAAK,CAAC,MAJR,CAKE,WAAW,CAAC,YALd,CAME,OAAO,CAAEjB,KANX,CAOE,KAAK,eAAEe,KAAK,CAACV,IAAR,uCAAE,aAAYc,KAPrB,EADF,cAUE,KAAC,IAAD,CAAM,KAAN,EACE,IAAI,CAAC,OADP,CAEE,QAAQ,CAAEF,YAFZ,CAGE,EAAE,CAAC,gCAHL,CAIE,OAAO,CAAEjB,KAJX,CAKE,KAAK,CAAC,OALR,CAME,WAAW,CAAC,gBANd,CAOE,KAAK,gBAAEe,KAAK,CAACO,KAAR,wCAAE,cAAaH,KAPtB,EAVF,cAmBE,KAAC,IAAD,CAAM,KAAN,EACE,IAAI,CAAC,SADP,CAEE,QAAQ,CAAEF,YAFZ,CAGE,EAAE,CAAC,kCAHL,CAIE,KAAK,CAAC,SAJR,CAKE,OAAO,CAAEjB,KALX,CAME,KAAK,kBAAEe,KAAK,CAACU,OAAR,0CAAE,gBAAeN,KANxB,EAnBF,cA2BE,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,oBA3BF,GADF,EADF,CAiCD,CApFD,CAsFA,cAAeL,CAAAA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form, Input, Container } from \"semantic-ui-react\";\nimport validator from \"validator\";\nimport isEmail from \"validator/lib/isEmail\";\n\nconst validateRequired = (name, value) => {\n  if (!value || !value.toString().trim().length) {\n    return {\n      content: `Please enter a ${name}`,\n    };\n  }\n};\n\nconst validateEmail = (value) => {\n  const valido = validator.isEmail(value);\n  if (!valido) {\n    return {\n      content: `Please enter a valid email`,\n    };\n  }\n};\n\nconst validateLength = (value) => {\n  if (value.toString().trim().length < 12) {\n    return {\n      content: \"Please enter a message of at least 12 characters\",\n    };\n  }\n};\n\nconst ContactForm = () => {\n  const [state, setState] = useState({});\n  const handleChange = (e, { name, value }) => {\n    var error;\n    if (name === \"email\") {\n      error = validateEmail(value);\n      setState({ ...state, [name]: { value, error } });\n      if (error) {\n        return;\n      }\n    }\n    if (name === \"message\") {\n      error = validateLength(value);\n      setState({ ...state, [name]: { value, error } });\n      if (error) {\n        return;\n      }\n    }\n    error = validateRequired(name, value);\n    setState({ ...state, [name]: { value, error } });\n  };\n  const handleSubmit = (e) => {\n    const emailError = validateRequired(\"email\", state.email?.value);\n    const nameError = validateRequired(\"name\", state.name?.value);\n    const messageError = validateRequired(\"message\", state.message?.value);\n    let newState = state;\n\n    if (emailError) {\n      newState = {\n        ...state,\n        email: { value: state.email?.value, error: emailError },\n      };\n    }\n\n    if (nameError) {\n      newState = {\n        ...newState,\n        name: { value: state.name?.value, error: nameError },\n      };\n    }\n\n    if (messageError) {\n      newState = {\n        ...newState,\n        message: { value: state.message?.value, error: messageError },\n      };\n    }\n\n    setState(newState);\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Form.Field\n          name=\"name\"\n          onChange={handleChange}\n          id=\"form-input-control-error-name\"\n          label=\"Name\"\n          placeholder=\"Joe Schmoe\"\n          control={Input}\n          error={state.name?.error}\n        ></Form.Field>\n        <Form.Field\n          name=\"email\"\n          onChange={handleChange}\n          id=\"form-input-control-error-email\"\n          control={Input}\n          label=\"Email\"\n          placeholder=\"joe@schmoe.com\"\n          error={state.email?.error}\n        ></Form.Field>\n        <Form.Field\n          name=\"message\"\n          onChange={handleChange}\n          id=\"form-input-control-error-message\"\n          label=\"Message\"\n          control={Input}\n          error={state.message?.error}\n        ></Form.Field>\n        <Button type=\"submit\">Submit</Button>\n      </Form>\n    </Container>\n  );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}