{"ast":null,"code":"import _objectSpread from\"/Users/donitabella/Desktop/UC BERKELEY/Challenges/React Portfolio/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import\"./App.css\";import{ApolloClient,InMemoryCache,ApolloProvider,createHttpLink}from\"@apollo/client\";import{setContext}from\"@apollo/client/link/context\";import\"semantic-ui-css/semantic.min.css\";import{BrowserRouter as Router,Switch,Route}from\"react-router-dom\";import MainPage from\"./components/MainPage\";import About from\"./components/About\";import Contact from\"./components/Contact\";import Resume from\"./components/Resume\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var httpLink=createHttpLink({url:\"/graphql\"});var authLink=setContext(function(_,_ref){var headers=_ref.headers;var token=localStorage.getItem(\"id_token\");return{headers:_objectSpread(_objectSpread({},headers),{},{authorization:token?\"Bearer \".concat(token):\"\"})};});var client=new ApolloClient({link:authLink.concat(httpLink),cache:new InMemoryCache()});function App(){return/*#__PURE__*/_jsx(ApolloProvider,{client:client,children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",component:MainPage}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/about\",component:About}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/portfolio\",component:MainPage}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/contact\",component:Contact}),/*#__PURE__*/_jsx(Route,{path:\"/resume\",component:Resume})]})})});}export default App;","map":{"version":3,"sources":["/Users/donitabella/Desktop/UC BERKELEY/Challenges/React Portfolio/src/App.js"],"names":["React","ApolloClient","InMemoryCache","ApolloProvider","createHttpLink","setContext","BrowserRouter","Router","Switch","Route","MainPage","About","Contact","Resume","httpLink","url","authLink","_","headers","token","localStorage","getItem","authorization","client","link","concat","cache","App"],"mappings":"mJAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,WAAP,CACA,OACEC,YADF,CAEEC,aAFF,CAGEC,cAHF,CAIEC,cAJF,KAKO,gBALP,CAMA,OAASC,UAAT,KAA2B,6BAA3B,CACA,MAAO,kCAAP,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,MAAlC,CAA0CC,KAA1C,KAAuD,kBAAvD,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAGV,cAAc,CAAC,CAC9BW,GAAG,CAAE,UADyB,CAAD,CAA/B,CAIA,GAAMC,CAAAA,QAAQ,CAAGX,UAAU,CAAC,SAACY,CAAD,MAAoB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CAC9C,GAAMC,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAd,CACA,MAAO,CACLH,OAAO,gCACFA,OADE,MAELI,aAAa,CAAEH,KAAK,kBAAaA,KAAb,EAAuB,EAFtC,EADF,CAAP,CAMD,CAR0B,CAA3B,CAUA,GAAMI,CAAAA,MAAM,CAAG,GAAItB,CAAAA,YAAJ,CAAiB,CAC9BuB,IAAI,CAAER,QAAQ,CAACS,MAAT,CAAgBX,QAAhB,CADwB,CAE9BY,KAAK,CAAE,GAAIxB,CAAAA,aAAJ,EAFuB,CAAjB,CAAf,CAKA,QAASyB,CAAAA,GAAT,EAAe,CACb,mBACE,KAAC,cAAD,EAAgB,MAAM,CAAEJ,MAAxB,uBACE,KAAC,MAAD,wBACE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,CAAsB,SAAS,CAAEb,QAAjC,EADF,cAEE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,QAAlB,CAA2B,SAAS,CAAEC,KAAtC,EAFF,cAGE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,YAAlB,CAA+B,SAAS,CAAED,QAA1C,EAHF,cAIE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,UAAlB,CAA6B,SAAS,CAAEE,OAAxC,EAJF,cAKE,KAAC,KAAD,EAAO,IAAI,CAAC,SAAZ,CAAsB,SAAS,CAAEC,MAAjC,EALF,GADF,EADF,EADF,CAaD,CAED,cAAec,CAAAA,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport MainPage from \"./components/MainPage\";\nimport About from \"./components/About\";\nimport Contact from \"./components/Contact\";\nimport Resume from \"./components/Resume\";\n\nconst httpLink = createHttpLink({\n  url: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={MainPage} />\n          <Route exact path=\"/about\" component={About} />\n          <Route exact path=\"/portfolio\" component={MainPage} />\n          <Route exact path=\"/contact\" component={Contact} />\n          <Route path=\"/resume\" component={Resume} />\n        </Switch>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}