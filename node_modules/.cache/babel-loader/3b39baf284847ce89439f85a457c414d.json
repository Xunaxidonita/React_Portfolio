{"ast":null,"code":"var _jsxFileName = \"/Users/donitabella/Desktop/UC BERKELEY/Challenges/React Portfolio/src/components/ContactForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Form, Input, Container } from \"semantic-ui-react\";\nimport validator from \"validator\";\nimport isEmail from \"validator/lib/isEmail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst validateRequired = (name, value) => {\n  if (!value || !value.toString().trim().length) {\n    return {\n      content: `Please enter a ${name}`\n    };\n  }\n};\n\nconst validateEmail = value => {\n  const valido = validator.isEmail(value);\n\n  if (!valido) {\n    return {\n      content: `Please enter a valid email`\n    };\n  }\n};\n\nconst validateLength = value => {\n  if (value.toString().trim().length < 12) {\n    return {\n      content: \"Please enter a message of at least 12 characters\"\n    };\n  }\n};\n\nconst ContactForm = () => {\n  _s();\n\n  var _state$name, _state$email, _state$message;\n\n  const [state, setState] = useState({});\n\n  const handleChange = (e, {\n    name,\n    value\n  }) => {\n    var error;\n\n    if (name === \"email\") {\n      error = validateEmail(value);\n      setState({ ...state,\n        [name]: {\n          value,\n          error\n        }\n      });\n    }\n\n    if (name === \"message\") {\n      error = validateLength(value);\n      setState({ ...state,\n        [name]: {\n          value,\n          error\n        }\n      });\n    }\n\n    error = validateRequired(name, value);\n\n    if (error) {\n      setState({ ...state,\n        [name]: {\n          value,\n          error\n        }\n      });\n    }\n  };\n\n  const handleSubmit = e => {\n    // const emailError = validateRequired(\"email\", state.email?.value);\n    // const nameError = validateRequired(\"name\", state.name?.value);\n    // const messageError = validateRequired(\"message\", state.message?.value);\n    if (state.email.value === undefined) {\n      setState({ ...state,\n        email: {\n          value: state.email.value,\n          error: emailError\n        }\n      });\n    }\n\n    if (nameError || state.name.value === undefined) {\n      setState({ ...state,\n        name: {\n          value: state.name.value,\n          error: nameError\n        }\n      });\n    }\n\n    if (messageError || state.message.value === undefined) {\n      setState({ ...state,\n        message: {\n          value: state.message.value,\n          error: messageError\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n        name: \"name\",\n        onChange: handleChange,\n        id: \"form-input-control-error-name\",\n        label: \"Name\",\n        placeholder: \"Joe Schmoe\",\n        control: Input,\n        error: (_state$name = state.name) === null || _state$name === void 0 ? void 0 : _state$name.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        name: \"email\",\n        onChange: handleChange,\n        id: \"form-input-control-error-email\",\n        control: Input,\n        label: \"Email\",\n        placeholder: \"joe@schmoe.com\",\n        error: (_state$email = state.email) === null || _state$email === void 0 ? void 0 : _state$email.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        name: \"message\",\n        onChange: handleChange,\n        id: \"form-input-control-error-message\",\n        label: \"Message\",\n        control: Input,\n        error: (_state$message = state.message) === null || _state$message === void 0 ? void 0 : _state$message.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactForm, \"wc4FVGFDk/CrMM/4WhalkcDyeN4=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/donitabella/Desktop/UC BERKELEY/Challenges/React Portfolio/src/components/ContactForm.js"],"names":["React","useState","Button","Form","Input","Container","validator","isEmail","validateRequired","name","value","toString","trim","length","content","validateEmail","valido","validateLength","ContactForm","state","setState","handleChange","e","error","handleSubmit","email","undefined","emailError","nameError","messageError","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form, Input, Container } from \"semantic-ui-react\";\nimport validator from \"validator\";\nimport isEmail from \"validator/lib/isEmail\";\n\nconst validateRequired = (name, value) => {\n  if (!value || !value.toString().trim().length) {\n    return {\n      content: `Please enter a ${name}`,\n    };\n  }\n};\n\nconst validateEmail = (value) => {\n  const valido = validator.isEmail(value);\n  if (!valido) {\n    return {\n      content: `Please enter a valid email`,\n    };\n  }\n};\n\nconst validateLength = (value) => {\n  if (value.toString().trim().length < 12) {\n    return {\n      content: \"Please enter a message of at least 12 characters\",\n    };\n  }\n};\n\nconst ContactForm = () => {\n  const [state, setState] = useState({});\n  const handleChange = (e, { name, value }) => {\n    var error;\n    if (name === \"email\") {\n      error = validateEmail(value);\n\n      setState({ ...state, [name]: { value, error } });\n    }\n    if (name === \"message\") {\n      error = validateLength(value);\n      setState({ ...state, [name]: { value, error } });\n    }\n    error = validateRequired(name, value);\n    if (error) {\n      setState({ ...state, [name]: { value, error } });\n    }\n  };\n  const handleSubmit = (e) => {\n    // const emailError = validateRequired(\"email\", state.email?.value);\n    // const nameError = validateRequired(\"name\", state.name?.value);\n    // const messageError = validateRequired(\"message\", state.message?.value);\n    if (state.email.value === undefined) {\n      setState({\n        ...state,\n        email: { value: state.email.value, error: emailError },\n      });\n    }\n    if (nameError || state.name.value === undefined) {\n      setState({\n        ...state,\n        name: { value: state.name.value, error: nameError },\n      });\n    }\n    if (messageError || state.message.value === undefined) {\n      setState({\n        ...state,\n        message: { value: state.message.value, error: messageError },\n      });\n    }\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Form.Field\n          name=\"name\"\n          onChange={handleChange}\n          id=\"form-input-control-error-name\"\n          label=\"Name\"\n          placeholder=\"Joe Schmoe\"\n          control={Input}\n          error={state.name?.error}\n        ></Form.Field>\n        <Form.Field\n          name=\"email\"\n          onChange={handleChange}\n          id=\"form-input-control-error-email\"\n          control={Input}\n          label=\"Email\"\n          placeholder=\"joe@schmoe.com\"\n          error={state.email?.error}\n        ></Form.Field>\n        <Form.Field\n          name=\"message\"\n          onChange={handleChange}\n          id=\"form-input-control-error-message\"\n          label=\"Message\"\n          control={Input}\n          error={state.message?.error}\n        ></Form.Field>\n        <Button type=\"submit\">Submit</Button>\n      </Form>\n    </Container>\n  );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}